openapi: 3.0.0
info:
  title: Todo API
  description: CRUD operations for managing todos
  version: 1.0.0

paths:
  /{userId}/lists:
    get:
      summary: Get all lists of a user
      description: Retrieve all lists belonging to a user.
      parameters:
        - in: path
          name: userId
          description: The ID of the user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with an array of lists.

    post:
      summary: Add a new list
      description: Add a new list for a user.
      parameters:
        - in: path
          name: userId
          description: The ID of the user.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                tasks:
                  type: array
                  items:
                    type: object
                    properties:
                      task:
                        type: string
                      completed:
                        type: boolean
      responses:
        '200':
          description: Successful response with a message.

  /{userId}/lists/{listId}/tasks:
    get:
      summary: Get all tasks of a list
      description: Retrieve all tasks belonging to a list.
      parameters:
        - in: path
          name: userId
          description: The ID of the user.
          required: true
          schema:
            type: string
        - in: path
          name: listId
          description: The ID of the list.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with an array of tasks.

    post:
      summary: Add a new task
      description: Add a new task to a list.
      parameters:
        - in: path
          name: userId
          description: The ID of the user.
          required: true
          schema:
            type: string
        - in: path
          name: listId
          description: The ID of the list.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                completed:
                  type: boolean
      responses:
        '200':
          description: Successful response with a message.

  /{userId}/lists/{listId}/tasks/{taskId}:
    put:
      summary: Update a task
      description: Update a task within a list.
      parameters:
        - in: path
          name: userId
          description: The ID of the user.
          required: true
          schema:
            type: string
        - in: path
          name: listId
          description: The ID of the list.
          required: true
          schema:
            type: string
        - in: path
          name: taskId
          description: The ID of the task to be updated.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                completed:
                  type: boolean
      responses:
        '200':
          description: Successful response with a message.

    delete:
      summary: Delete a task
      description: Delete a task from a list.
      parameters:
        - in: path
          name: userId
          description: The ID of the user.
          required: true
          schema:
            type: string
        - in: path
          name: listId
          description: The ID of the list.
          required: true
          schema:
            type: string
        - in: path
          name: taskId
          description: The ID of the task to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with a message.

  /{userId}/lists/{listId}:
    delete:
      summary: Delete a list
      description: Delete a list by its ID.
      parameters:
        - in: path
          name: userId
          description: The ID of the user.
          required: true
          schema:
            type: string
        - in: path
          name: listId
          description: The ID of the list to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response with a message.

  /{userId}/lists/{listId}/share:
    post:
      summary: Share a list
      description: Share a list with another user.
      parameters:
        - in: path
          name: userId
          description: The ID of the user who owns the list.
          required: true
          schema:
            type: string
        - in: path
          name: listId
          description: The ID of the list to be shared.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                permission:
                  type: string
      responses:
        '200':
          description: Successful response with a message.

  /users:
    get:
      summary: Get all users
      description: Retrieve a list of all users.
      responses:
        '200':
          description: Successful response with an array of users.

  /register:
    post:
      summary: Register User
      description: Register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Successful response with a message.

  /login:
    post:
      summary: Login User
      description: Log in a user with username and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful response with a message.
